// Code generated from Cmd.g4 by ANTLR 4.10. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type CmdLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var cmdlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func cmdlexerLexerInit() {
	staticData := &cmdlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.symbolicNames = []string{
		"", "TOK_MKDISK", "TOK_RMDISK", "TOK_FDISK", "TOK_MOUNT", "TOK_MKFS",
		"TOK_LOGIN", "TOK_LOGOUT", "TOK_MKGRP", "TOK_RMGRP", "TOK_MKUSR", "TOK_RMUSR",
		"TOK_MKFILE", "TOK_MKDIR", "TOK_EXEC", "TOK_PAUSE", "TOK_REP", "TOK_PATH",
		"TOK_FIT", "TOK_SIZE", "TOK_UNIT", "TOK_NAME", "TOK_TYPE", "TOK_ID",
		"TOK_USUARIO", "TOK_PASSWORD", "TOK_PWD", "TOK_CONT", "TOK_GRP", "TOK_RUTA",
		"TOK_R", "TOK_P", "TOK_FIRST", "TOK_WORST", "TOK_BEST", "TOK_KB", "TOK_MB",
		"TOK_BYTES", "TOK_PRIMARIA", "TOK_EXTENDIDA", "TOK_LOGICA", "TOK_FAST",
		"TOK_FULL", "TOK_CADENA", "TOK_NUMERO", "TOK_IDENTIFICADOR", "TOK_CAMINO",
		"TOK_PALABRA", "TOK_IGUAL", "COMENTARIOS", "WHITESPACE",
	}
	staticData.ruleNames = []string{
		"SLASH", "COMDOB", "HASHTAG", "DASH", "TOK_MKDISK", "TOK_RMDISK", "TOK_FDISK",
		"TOK_MOUNT", "TOK_MKFS", "TOK_LOGIN", "TOK_LOGOUT", "TOK_MKGRP", "TOK_RMGRP",
		"TOK_MKUSR", "TOK_RMUSR", "TOK_MKFILE", "TOK_MKDIR", "TOK_EXEC", "TOK_PAUSE",
		"TOK_REP", "TOK_PATH", "TOK_FIT", "TOK_SIZE", "TOK_UNIT", "TOK_NAME",
		"TOK_TYPE", "TOK_ID", "TOK_USUARIO", "TOK_PASSWORD", "TOK_PWD", "TOK_CONT",
		"TOK_GRP", "TOK_RUTA", "TOK_R", "TOK_P", "TOK_FIRST", "TOK_WORST", "TOK_BEST",
		"TOK_KB", "TOK_MB", "TOK_BYTES", "TOK_PRIMARIA", "TOK_EXTENDIDA", "TOK_LOGICA",
		"TOK_FAST", "TOK_FULL", "TOK_CADENA", "TOK_NUMERO", "TOK_IDENTIFICADOR",
		"TOK_CAMINO", "TOK_PALABRA", "TOK_IGUAL", "COMENTARIOS", "WHITESPACE",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 50, 385, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3,
		1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5,
		1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7,
		1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1,
		11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13,
		1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1,
		14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24,
		1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27,
		1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1,
		28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30,
		1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1,
		32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 35,
		1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1,
		39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44,
		1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 46, 1,
		46, 5, 46, 333, 8, 46, 10, 46, 12, 46, 336, 9, 46, 1, 46, 1, 46, 1, 47,
		4, 47, 341, 8, 47, 11, 47, 12, 47, 342, 1, 48, 1, 48, 1, 48, 1, 48, 1,
		48, 1, 49, 1, 49, 4, 49, 352, 8, 49, 11, 49, 12, 49, 353, 4, 49, 356, 8,
		49, 11, 49, 12, 49, 357, 1, 50, 4, 50, 361, 8, 50, 11, 50, 12, 50, 362,
		1, 51, 1, 51, 1, 52, 1, 52, 5, 52, 369, 8, 52, 10, 52, 12, 52, 372, 9,
		52, 1, 52, 3, 52, 375, 8, 52, 1, 52, 1, 52, 1, 53, 4, 53, 380, 8, 53, 11,
		53, 12, 53, 381, 1, 53, 1, 53, 0, 0, 54, 1, 0, 3, 0, 5, 0, 7, 0, 9, 1,
		11, 2, 13, 3, 15, 4, 17, 5, 19, 6, 21, 7, 23, 8, 25, 9, 27, 10, 29, 11,
		31, 12, 33, 13, 35, 14, 37, 15, 39, 16, 41, 17, 43, 18, 45, 19, 47, 20,
		49, 21, 51, 22, 53, 23, 55, 24, 57, 25, 59, 26, 61, 27, 63, 28, 65, 29,
		67, 30, 69, 31, 71, 32, 73, 33, 75, 34, 77, 35, 79, 36, 81, 37, 83, 38,
		85, 39, 87, 40, 89, 41, 91, 42, 93, 43, 95, 44, 97, 45, 99, 46, 101, 47,
		103, 48, 105, 49, 107, 50, 1, 0, 31, 2, 0, 77, 77, 109, 109, 2, 0, 75,
		75, 107, 107, 2, 0, 68, 68, 100, 100, 2, 0, 73, 73, 105, 105, 2, 0, 83,
		83, 115, 115, 2, 0, 82, 82, 114, 114, 2, 0, 70, 70, 102, 102, 2, 0, 79,
		79, 111, 111, 2, 0, 85, 85, 117, 117, 2, 0, 78, 78, 110, 110, 2, 0, 84,
		84, 116, 116, 2, 0, 76, 76, 108, 108, 2, 0, 71, 71, 103, 103, 2, 0, 80,
		80, 112, 112, 2, 0, 69, 69, 101, 101, 2, 0, 88, 88, 120, 120, 2, 0, 67,
		67, 99, 99, 2, 0, 65, 65, 97, 97, 2, 0, 72, 72, 104, 104, 2, 0, 90, 90,
		122, 122, 2, 0, 89, 89, 121, 121, 2, 0, 87, 87, 119, 119, 2, 0, 66, 66,
		98, 98, 2, 0, 10, 10, 34, 34, 1, 0, 48, 57, 3, 0, 65, 65, 90, 90, 97, 122,
		3, 0, 10, 10, 32, 32, 34, 34, 5, 0, 45, 46, 48, 57, 65, 90, 95, 95, 97,
		122, 1, 0, 61, 61, 1, 0, 10, 10, 3, 0, 9, 10, 13, 13, 32, 32, 388, 0, 9,
		1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0,
		17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0,
		0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0,
		0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0,
		0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1,
		0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55,
		1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0,
		63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0,
		0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0,
		0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0,
		0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1,
		0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101,
		1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0,
		1, 109, 1, 0, 0, 0, 3, 111, 1, 0, 0, 0, 5, 113, 1, 0, 0, 0, 7, 115, 1,
		0, 0, 0, 9, 117, 1, 0, 0, 0, 11, 124, 1, 0, 0, 0, 13, 131, 1, 0, 0, 0,
		15, 137, 1, 0, 0, 0, 17, 143, 1, 0, 0, 0, 19, 148, 1, 0, 0, 0, 21, 154,
		1, 0, 0, 0, 23, 161, 1, 0, 0, 0, 25, 167, 1, 0, 0, 0, 27, 173, 1, 0, 0,
		0, 29, 179, 1, 0, 0, 0, 31, 185, 1, 0, 0, 0, 33, 192, 1, 0, 0, 0, 35, 198,
		1, 0, 0, 0, 37, 203, 1, 0, 0, 0, 39, 209, 1, 0, 0, 0, 41, 213, 1, 0, 0,
		0, 43, 219, 1, 0, 0, 0, 45, 224, 1, 0, 0, 0, 47, 230, 1, 0, 0, 0, 49, 236,
		1, 0, 0, 0, 51, 242, 1, 0, 0, 0, 53, 248, 1, 0, 0, 0, 55, 252, 1, 0, 0,
		0, 57, 261, 1, 0, 0, 0, 59, 271, 1, 0, 0, 0, 61, 276, 1, 0, 0, 0, 63, 282,
		1, 0, 0, 0, 65, 287, 1, 0, 0, 0, 67, 293, 1, 0, 0, 0, 69, 296, 1, 0, 0,
		0, 71, 299, 1, 0, 0, 0, 73, 302, 1, 0, 0, 0, 75, 305, 1, 0, 0, 0, 77, 308,
		1, 0, 0, 0, 79, 310, 1, 0, 0, 0, 81, 312, 1, 0, 0, 0, 83, 314, 1, 0, 0,
		0, 85, 316, 1, 0, 0, 0, 87, 318, 1, 0, 0, 0, 89, 320, 1, 0, 0, 0, 91, 325,
		1, 0, 0, 0, 93, 330, 1, 0, 0, 0, 95, 340, 1, 0, 0, 0, 97, 344, 1, 0, 0,
		0, 99, 355, 1, 0, 0, 0, 101, 360, 1, 0, 0, 0, 103, 364, 1, 0, 0, 0, 105,
		366, 1, 0, 0, 0, 107, 379, 1, 0, 0, 0, 109, 110, 5, 47, 0, 0, 110, 2, 1,
		0, 0, 0, 111, 112, 5, 34, 0, 0, 112, 4, 1, 0, 0, 0, 113, 114, 5, 35, 0,
		0, 114, 6, 1, 0, 0, 0, 115, 116, 5, 45, 0, 0, 116, 8, 1, 0, 0, 0, 117,
		118, 7, 0, 0, 0, 118, 119, 7, 1, 0, 0, 119, 120, 7, 2, 0, 0, 120, 121,
		7, 3, 0, 0, 121, 122, 7, 4, 0, 0, 122, 123, 7, 1, 0, 0, 123, 10, 1, 0,
		0, 0, 124, 125, 7, 5, 0, 0, 125, 126, 7, 0, 0, 0, 126, 127, 7, 2, 0, 0,
		127, 128, 7, 3, 0, 0, 128, 129, 7, 4, 0, 0, 129, 130, 7, 1, 0, 0, 130,
		12, 1, 0, 0, 0, 131, 132, 7, 6, 0, 0, 132, 133, 7, 2, 0, 0, 133, 134, 7,
		3, 0, 0, 134, 135, 7, 4, 0, 0, 135, 136, 7, 1, 0, 0, 136, 14, 1, 0, 0,
		0, 137, 138, 7, 0, 0, 0, 138, 139, 7, 7, 0, 0, 139, 140, 7, 8, 0, 0, 140,
		141, 7, 9, 0, 0, 141, 142, 7, 10, 0, 0, 142, 16, 1, 0, 0, 0, 143, 144,
		7, 0, 0, 0, 144, 145, 7, 1, 0, 0, 145, 146, 7, 6, 0, 0, 146, 147, 7, 4,
		0, 0, 147, 18, 1, 0, 0, 0, 148, 149, 7, 11, 0, 0, 149, 150, 7, 7, 0, 0,
		150, 151, 7, 12, 0, 0, 151, 152, 7, 3, 0, 0, 152, 153, 7, 9, 0, 0, 153,
		20, 1, 0, 0, 0, 154, 155, 7, 11, 0, 0, 155, 156, 7, 7, 0, 0, 156, 157,
		7, 12, 0, 0, 157, 158, 7, 7, 0, 0, 158, 159, 7, 8, 0, 0, 159, 160, 7, 10,
		0, 0, 160, 22, 1, 0, 0, 0, 161, 162, 7, 0, 0, 0, 162, 163, 7, 1, 0, 0,
		163, 164, 7, 12, 0, 0, 164, 165, 7, 5, 0, 0, 165, 166, 7, 13, 0, 0, 166,
		24, 1, 0, 0, 0, 167, 168, 7, 5, 0, 0, 168, 169, 7, 0, 0, 0, 169, 170, 7,
		12, 0, 0, 170, 171, 7, 5, 0, 0, 171, 172, 7, 13, 0, 0, 172, 26, 1, 0, 0,
		0, 173, 174, 7, 0, 0, 0, 174, 175, 7, 1, 0, 0, 175, 176, 7, 8, 0, 0, 176,
		177, 7, 4, 0, 0, 177, 178, 7, 5, 0, 0, 178, 28, 1, 0, 0, 0, 179, 180, 7,
		5, 0, 0, 180, 181, 7, 0, 0, 0, 181, 182, 7, 8, 0, 0, 182, 183, 7, 4, 0,
		0, 183, 184, 7, 5, 0, 0, 184, 30, 1, 0, 0, 0, 185, 186, 7, 0, 0, 0, 186,
		187, 7, 1, 0, 0, 187, 188, 7, 6, 0, 0, 188, 189, 7, 3, 0, 0, 189, 190,
		7, 11, 0, 0, 190, 191, 7, 14, 0, 0, 191, 32, 1, 0, 0, 0, 192, 193, 7, 0,
		0, 0, 193, 194, 7, 1, 0, 0, 194, 195, 7, 2, 0, 0, 195, 196, 7, 3, 0, 0,
		196, 197, 7, 5, 0, 0, 197, 34, 1, 0, 0, 0, 198, 199, 7, 14, 0, 0, 199,
		200, 7, 15, 0, 0, 200, 201, 7, 14, 0, 0, 201, 202, 7, 16, 0, 0, 202, 36,
		1, 0, 0, 0, 203, 204, 7, 13, 0, 0, 204, 205, 7, 17, 0, 0, 205, 206, 7,
		8, 0, 0, 206, 207, 7, 4, 0, 0, 207, 208, 7, 14, 0, 0, 208, 38, 1, 0, 0,
		0, 209, 210, 7, 5, 0, 0, 210, 211, 7, 14, 0, 0, 211, 212, 7, 13, 0, 0,
		212, 40, 1, 0, 0, 0, 213, 214, 3, 7, 3, 0, 214, 215, 7, 13, 0, 0, 215,
		216, 7, 17, 0, 0, 216, 217, 7, 10, 0, 0, 217, 218, 7, 18, 0, 0, 218, 42,
		1, 0, 0, 0, 219, 220, 3, 7, 3, 0, 220, 221, 7, 6, 0, 0, 221, 222, 7, 3,
		0, 0, 222, 223, 7, 10, 0, 0, 223, 44, 1, 0, 0, 0, 224, 225, 3, 7, 3, 0,
		225, 226, 7, 4, 0, 0, 226, 227, 7, 3, 0, 0, 227, 228, 7, 19, 0, 0, 228,
		229, 7, 14, 0, 0, 229, 46, 1, 0, 0, 0, 230, 231, 3, 7, 3, 0, 231, 232,
		7, 8, 0, 0, 232, 233, 7, 9, 0, 0, 233, 234, 7, 3, 0, 0, 234, 235, 7, 10,
		0, 0, 235, 48, 1, 0, 0, 0, 236, 237, 3, 7, 3, 0, 237, 238, 7, 9, 0, 0,
		238, 239, 7, 17, 0, 0, 239, 240, 7, 0, 0, 0, 240, 241, 7, 14, 0, 0, 241,
		50, 1, 0, 0, 0, 242, 243, 3, 7, 3, 0, 243, 244, 7, 10, 0, 0, 244, 245,
		7, 20, 0, 0, 245, 246, 7, 13, 0, 0, 246, 247, 7, 14, 0, 0, 247, 52, 1,
		0, 0, 0, 248, 249, 3, 7, 3, 0, 249, 250, 7, 3, 0, 0, 250, 251, 7, 2, 0,
		0, 251, 54, 1, 0, 0, 0, 252, 253, 3, 7, 3, 0, 253, 254, 7, 8, 0, 0, 254,
		255, 7, 4, 0, 0, 255, 256, 7, 8, 0, 0, 256, 257, 7, 17, 0, 0, 257, 258,
		7, 5, 0, 0, 258, 259, 7, 3, 0, 0, 259, 260, 7, 7, 0, 0, 260, 56, 1, 0,
		0, 0, 261, 262, 3, 7, 3, 0, 262, 263, 7, 13, 0, 0, 263, 264, 7, 17, 0,
		0, 264, 265, 7, 4, 0, 0, 265, 266, 7, 4, 0, 0, 266, 267, 7, 21, 0, 0, 267,
		268, 7, 7, 0, 0, 268, 269, 7, 5, 0, 0, 269, 270, 7, 2, 0, 0, 270, 58, 1,
		0, 0, 0, 271, 272, 3, 7, 3, 0, 272, 273, 7, 13, 0, 0, 273, 274, 7, 21,
		0, 0, 274, 275, 7, 2, 0, 0, 275, 60, 1, 0, 0, 0, 276, 277, 3, 7, 3, 0,
		277, 278, 7, 16, 0, 0, 278, 279, 7, 7, 0, 0, 279, 280, 7, 9, 0, 0, 280,
		281, 7, 10, 0, 0, 281, 62, 1, 0, 0, 0, 282, 283, 3, 7, 3, 0, 283, 284,
		7, 12, 0, 0, 284, 285, 7, 5, 0, 0, 285, 286, 7, 13, 0, 0, 286, 64, 1, 0,
		0, 0, 287, 288, 3, 7, 3, 0, 288, 289, 7, 5, 0, 0, 289, 290, 7, 8, 0, 0,
		290, 291, 7, 10, 0, 0, 291, 292, 7, 17, 0, 0, 292, 66, 1, 0, 0, 0, 293,
		294, 3, 7, 3, 0, 294, 295, 7, 5, 0, 0, 295, 68, 1, 0, 0, 0, 296, 297, 3,
		7, 3, 0, 297, 298, 7, 13, 0, 0, 298, 70, 1, 0, 0, 0, 299, 300, 7, 6, 0,
		0, 300, 301, 7, 6, 0, 0, 301, 72, 1, 0, 0, 0, 302, 303, 7, 21, 0, 0, 303,
		304, 7, 6, 0, 0, 304, 74, 1, 0, 0, 0, 305, 306, 7, 22, 0, 0, 306, 307,
		7, 6, 0, 0, 307, 76, 1, 0, 0, 0, 308, 309, 7, 1, 0, 0, 309, 78, 1, 0, 0,
		0, 310, 311, 7, 0, 0, 0, 311, 80, 1, 0, 0, 0, 312, 313, 7, 22, 0, 0, 313,
		82, 1, 0, 0, 0, 314, 315, 7, 13, 0, 0, 315, 84, 1, 0, 0, 0, 316, 317, 7,
		14, 0, 0, 317, 86, 1, 0, 0, 0, 318, 319, 7, 11, 0, 0, 319, 88, 1, 0, 0,
		0, 320, 321, 7, 6, 0, 0, 321, 322, 7, 17, 0, 0, 322, 323, 7, 4, 0, 0, 323,
		324, 7, 10, 0, 0, 324, 90, 1, 0, 0, 0, 325, 326, 7, 6, 0, 0, 326, 327,
		7, 8, 0, 0, 327, 328, 7, 11, 0, 0, 328, 329, 7, 11, 0, 0, 329, 92, 1, 0,
		0, 0, 330, 334, 3, 3, 1, 0, 331, 333, 8, 23, 0, 0, 332, 331, 1, 0, 0, 0,
		333, 336, 1, 0, 0, 0, 334, 332, 1, 0, 0, 0, 334, 335, 1, 0, 0, 0, 335,
		337, 1, 0, 0, 0, 336, 334, 1, 0, 0, 0, 337, 338, 3, 3, 1, 0, 338, 94, 1,
		0, 0, 0, 339, 341, 7, 24, 0, 0, 340, 339, 1, 0, 0, 0, 341, 342, 1, 0, 0,
		0, 342, 340, 1, 0, 0, 0, 342, 343, 1, 0, 0, 0, 343, 96, 1, 0, 0, 0, 344,
		345, 7, 24, 0, 0, 345, 346, 7, 24, 0, 0, 346, 347, 7, 24, 0, 0, 347, 348,
		7, 25, 0, 0, 348, 98, 1, 0, 0, 0, 349, 351, 3, 1, 0, 0, 350, 352, 8, 26,
		0, 0, 351, 350, 1, 0, 0, 0, 352, 353, 1, 0, 0, 0, 353, 351, 1, 0, 0, 0,
		353, 354, 1, 0, 0, 0, 354, 356, 1, 0, 0, 0, 355, 349, 1, 0, 0, 0, 356,
		357, 1, 0, 0, 0, 357, 355, 1, 0, 0, 0, 357, 358, 1, 0, 0, 0, 358, 100,
		1, 0, 0, 0, 359, 361, 7, 27, 0, 0, 360, 359, 1, 0, 0, 0, 361, 362, 1, 0,
		0, 0, 362, 360, 1, 0, 0, 0, 362, 363, 1, 0, 0, 0, 363, 102, 1, 0, 0, 0,
		364, 365, 7, 28, 0, 0, 365, 104, 1, 0, 0, 0, 366, 370, 3, 5, 2, 0, 367,
		369, 8, 29, 0, 0, 368, 367, 1, 0, 0, 0, 369, 372, 1, 0, 0, 0, 370, 368,
		1, 0, 0, 0, 370, 371, 1, 0, 0, 0, 371, 374, 1, 0, 0, 0, 372, 370, 1, 0,
		0, 0, 373, 375, 7, 29, 0, 0, 374, 373, 1, 0, 0, 0, 374, 375, 1, 0, 0, 0,
		375, 376, 1, 0, 0, 0, 376, 377, 6, 52, 0, 0, 377, 106, 1, 0, 0, 0, 378,
		380, 7, 30, 0, 0, 379, 378, 1, 0, 0, 0, 380, 381, 1, 0, 0, 0, 381, 379,
		1, 0, 0, 0, 381, 382, 1, 0, 0, 0, 382, 383, 1, 0, 0, 0, 383, 384, 6, 53,
		0, 0, 384, 108, 1, 0, 0, 0, 9, 0, 334, 342, 353, 357, 362, 370, 374, 381,
		1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// CmdLexerInit initializes any static state used to implement CmdLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewCmdLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func CmdLexerInit() {
	staticData := &cmdlexerLexerStaticData
	staticData.once.Do(cmdlexerLexerInit)
}

// NewCmdLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewCmdLexer(input antlr.CharStream) *CmdLexer {
	CmdLexerInit()
	l := new(CmdLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &cmdlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Cmd.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// CmdLexer tokens.
const (
	CmdLexerTOK_MKDISK        = 1
	CmdLexerTOK_RMDISK        = 2
	CmdLexerTOK_FDISK         = 3
	CmdLexerTOK_MOUNT         = 4
	CmdLexerTOK_MKFS          = 5
	CmdLexerTOK_LOGIN         = 6
	CmdLexerTOK_LOGOUT        = 7
	CmdLexerTOK_MKGRP         = 8
	CmdLexerTOK_RMGRP         = 9
	CmdLexerTOK_MKUSR         = 10
	CmdLexerTOK_RMUSR         = 11
	CmdLexerTOK_MKFILE        = 12
	CmdLexerTOK_MKDIR         = 13
	CmdLexerTOK_EXEC          = 14
	CmdLexerTOK_PAUSE         = 15
	CmdLexerTOK_REP           = 16
	CmdLexerTOK_PATH          = 17
	CmdLexerTOK_FIT           = 18
	CmdLexerTOK_SIZE          = 19
	CmdLexerTOK_UNIT          = 20
	CmdLexerTOK_NAME          = 21
	CmdLexerTOK_TYPE          = 22
	CmdLexerTOK_ID            = 23
	CmdLexerTOK_USUARIO       = 24
	CmdLexerTOK_PASSWORD      = 25
	CmdLexerTOK_PWD           = 26
	CmdLexerTOK_CONT          = 27
	CmdLexerTOK_GRP           = 28
	CmdLexerTOK_RUTA          = 29
	CmdLexerTOK_R             = 30
	CmdLexerTOK_P             = 31
	CmdLexerTOK_FIRST         = 32
	CmdLexerTOK_WORST         = 33
	CmdLexerTOK_BEST          = 34
	CmdLexerTOK_KB            = 35
	CmdLexerTOK_MB            = 36
	CmdLexerTOK_BYTES         = 37
	CmdLexerTOK_PRIMARIA      = 38
	CmdLexerTOK_EXTENDIDA     = 39
	CmdLexerTOK_LOGICA        = 40
	CmdLexerTOK_FAST          = 41
	CmdLexerTOK_FULL          = 42
	CmdLexerTOK_CADENA        = 43
	CmdLexerTOK_NUMERO        = 44
	CmdLexerTOK_IDENTIFICADOR = 45
	CmdLexerTOK_CAMINO        = 46
	CmdLexerTOK_PALABRA       = 47
	CmdLexerTOK_IGUAL         = 48
	CmdLexerCOMENTARIOS       = 49
	CmdLexerWHITESPACE        = 50
)
