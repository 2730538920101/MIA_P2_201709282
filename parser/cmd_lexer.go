// Code generated from Cmd.g4 by ANTLR 4.10. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type CmdLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var cmdlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func cmdlexerLexerInit() {
	staticData := &cmdlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.symbolicNames = []string{
		"", "TOK_MKDISK", "TOK_RMDISK", "TOK_FDISK", "TOK_MOUNT", "TOK_MKFS",
		"TOK_LOGIN", "TOK_LOGOUT", "TOK_MKGRP", "TOK_RMGRP", "TOK_MKUSR", "TOK_RMUSR",
		"TOK_MKFILE", "TOK_MKDIR", "TOK_EXEC", "TOK_PAUSE", "TOK_REP", "TOK_PATH",
		"TOK_FIT", "TOK_SIZE", "TOK_UNIT", "TOK_NAME", "TOK_TYPE", "TOK_ID",
		"TOK_USUARIO", "TOK_PASSWORD", "TOK_PWD", "TOK_CONT", "TOK_GRP", "TOK_RUTA",
		"TOK_R", "TOK_P", "TOK_FIRST", "TOK_WORST", "TOK_BEST", "TOK_KB", "TOK_MB",
		"TOK_BYTES", "TOK_PRIMARIA", "TOK_EXTENDIDA", "TOK_LOGICA", "TOK_FAST",
		"TOK_FULL", "TOK_CADENA", "TOK_NUMERO", "TOK_IDENTIFICADOR", "TOK_CAMINO",
		"TOK_PALABRA", "TOK_IGUAL", "COMENTARIOS", "WHITESPACE",
	}
	staticData.ruleNames = []string{
		"TOK_MKDISK", "TOK_RMDISK", "TOK_FDISK", "TOK_MOUNT", "TOK_MKFS", "TOK_LOGIN",
		"TOK_LOGOUT", "TOK_MKGRP", "TOK_RMGRP", "TOK_MKUSR", "TOK_RMUSR", "TOK_MKFILE",
		"TOK_MKDIR", "TOK_EXEC", "TOK_PAUSE", "TOK_REP", "TOK_PATH", "TOK_FIT",
		"TOK_SIZE", "TOK_UNIT", "TOK_NAME", "TOK_TYPE", "TOK_ID", "TOK_USUARIO",
		"TOK_PASSWORD", "TOK_PWD", "TOK_CONT", "TOK_GRP", "TOK_RUTA", "TOK_R",
		"TOK_P", "TOK_FIRST", "TOK_WORST", "TOK_BEST", "TOK_KB", "TOK_MB", "TOK_BYTES",
		"TOK_PRIMARIA", "TOK_EXTENDIDA", "TOK_LOGICA", "TOK_FAST", "TOK_FULL",
		"TOK_CADENA", "TOK_NUMERO", "TOK_IDENTIFICADOR", "TOK_CAMINO", "TOK_PALABRA",
		"TOK_IGUAL", "COMENTARIOS", "WHITESPACE",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 50, 369, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8,
		1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1,
		13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1,
		17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25,
		1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1,
		27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30,
		1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1,
		33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38,
		1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1,
		41, 1, 41, 1, 42, 1, 42, 5, 42, 317, 8, 42, 10, 42, 12, 42, 320, 9, 42,
		1, 42, 1, 42, 1, 43, 4, 43, 325, 8, 43, 11, 43, 12, 43, 326, 1, 44, 1,
		44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 4, 45, 336, 8, 45, 11, 45, 12, 45,
		337, 4, 45, 340, 8, 45, 11, 45, 12, 45, 341, 1, 46, 4, 46, 345, 8, 46,
		11, 46, 12, 46, 346, 1, 47, 1, 47, 1, 48, 1, 48, 5, 48, 353, 8, 48, 10,
		48, 12, 48, 356, 9, 48, 1, 48, 3, 48, 359, 8, 48, 1, 48, 1, 48, 1, 49,
		4, 49, 364, 8, 49, 11, 49, 12, 49, 365, 1, 49, 1, 49, 0, 0, 50, 1, 1, 3,
		2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12,
		25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21,
		43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30,
		61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39,
		79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48,
		97, 49, 99, 50, 1, 0, 35, 2, 0, 77, 77, 109, 109, 2, 0, 75, 75, 107, 107,
		2, 0, 68, 68, 100, 100, 2, 0, 73, 73, 105, 105, 2, 0, 83, 83, 115, 115,
		2, 0, 82, 82, 114, 114, 2, 0, 70, 70, 102, 102, 2, 0, 79, 79, 111, 111,
		2, 0, 85, 85, 117, 117, 2, 0, 78, 78, 110, 110, 2, 0, 84, 84, 116, 116,
		2, 0, 76, 76, 108, 108, 2, 0, 71, 71, 103, 103, 2, 0, 80, 80, 112, 112,
		2, 0, 69, 69, 101, 101, 2, 0, 88, 88, 120, 120, 2, 0, 67, 67, 99, 99, 2,
		0, 65, 65, 97, 97, 2, 0, 72, 72, 104, 104, 2, 0, 90, 90, 122, 122, 2, 0,
		89, 89, 121, 121, 2, 0, 87, 87, 119, 119, 2, 0, 66, 66, 98, 98, 1, 0, 34,
		34, 3, 0, 10, 10, 34, 34, 94, 94, 1, 0, 48, 57, 3, 0, 65, 65, 90, 90, 97,
		122, 1, 0, 47, 47, 4, 0, 10, 10, 32, 32, 34, 34, 94, 94, 5, 0, 45, 46,
		48, 57, 65, 90, 95, 95, 97, 122, 1, 0, 61, 61, 1, 0, 35, 35, 2, 0, 10,
		10, 94, 94, 1, 0, 10, 10, 3, 0, 9, 10, 13, 13, 32, 32, 376, 0, 1, 1, 0,
		0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0,
		0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1,
		0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25,
		1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0,
		33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0,
		0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0,
		0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0,
		0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1,
		0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71,
		1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0,
		79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0,
		0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0,
		0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 1, 101, 1,
		0, 0, 0, 3, 108, 1, 0, 0, 0, 5, 115, 1, 0, 0, 0, 7, 121, 1, 0, 0, 0, 9,
		127, 1, 0, 0, 0, 11, 132, 1, 0, 0, 0, 13, 138, 1, 0, 0, 0, 15, 145, 1,
		0, 0, 0, 17, 151, 1, 0, 0, 0, 19, 157, 1, 0, 0, 0, 21, 163, 1, 0, 0, 0,
		23, 169, 1, 0, 0, 0, 25, 176, 1, 0, 0, 0, 27, 182, 1, 0, 0, 0, 29, 187,
		1, 0, 0, 0, 31, 193, 1, 0, 0, 0, 33, 197, 1, 0, 0, 0, 35, 203, 1, 0, 0,
		0, 37, 208, 1, 0, 0, 0, 39, 214, 1, 0, 0, 0, 41, 220, 1, 0, 0, 0, 43, 226,
		1, 0, 0, 0, 45, 232, 1, 0, 0, 0, 47, 236, 1, 0, 0, 0, 49, 245, 1, 0, 0,
		0, 51, 255, 1, 0, 0, 0, 53, 260, 1, 0, 0, 0, 55, 266, 1, 0, 0, 0, 57, 271,
		1, 0, 0, 0, 59, 277, 1, 0, 0, 0, 61, 280, 1, 0, 0, 0, 63, 283, 1, 0, 0,
		0, 65, 286, 1, 0, 0, 0, 67, 289, 1, 0, 0, 0, 69, 292, 1, 0, 0, 0, 71, 294,
		1, 0, 0, 0, 73, 296, 1, 0, 0, 0, 75, 298, 1, 0, 0, 0, 77, 300, 1, 0, 0,
		0, 79, 302, 1, 0, 0, 0, 81, 304, 1, 0, 0, 0, 83, 309, 1, 0, 0, 0, 85, 314,
		1, 0, 0, 0, 87, 324, 1, 0, 0, 0, 89, 328, 1, 0, 0, 0, 91, 339, 1, 0, 0,
		0, 93, 344, 1, 0, 0, 0, 95, 348, 1, 0, 0, 0, 97, 350, 1, 0, 0, 0, 99, 363,
		1, 0, 0, 0, 101, 102, 7, 0, 0, 0, 102, 103, 7, 1, 0, 0, 103, 104, 7, 2,
		0, 0, 104, 105, 7, 3, 0, 0, 105, 106, 7, 4, 0, 0, 106, 107, 7, 1, 0, 0,
		107, 2, 1, 0, 0, 0, 108, 109, 7, 5, 0, 0, 109, 110, 7, 0, 0, 0, 110, 111,
		7, 2, 0, 0, 111, 112, 7, 3, 0, 0, 112, 113, 7, 4, 0, 0, 113, 114, 7, 1,
		0, 0, 114, 4, 1, 0, 0, 0, 115, 116, 7, 6, 0, 0, 116, 117, 7, 2, 0, 0, 117,
		118, 7, 3, 0, 0, 118, 119, 7, 4, 0, 0, 119, 120, 7, 1, 0, 0, 120, 6, 1,
		0, 0, 0, 121, 122, 7, 0, 0, 0, 122, 123, 7, 7, 0, 0, 123, 124, 7, 8, 0,
		0, 124, 125, 7, 9, 0, 0, 125, 126, 7, 10, 0, 0, 126, 8, 1, 0, 0, 0, 127,
		128, 7, 0, 0, 0, 128, 129, 7, 1, 0, 0, 129, 130, 7, 6, 0, 0, 130, 131,
		7, 4, 0, 0, 131, 10, 1, 0, 0, 0, 132, 133, 7, 11, 0, 0, 133, 134, 7, 7,
		0, 0, 134, 135, 7, 12, 0, 0, 135, 136, 7, 3, 0, 0, 136, 137, 7, 9, 0, 0,
		137, 12, 1, 0, 0, 0, 138, 139, 7, 11, 0, 0, 139, 140, 7, 7, 0, 0, 140,
		141, 7, 12, 0, 0, 141, 142, 7, 7, 0, 0, 142, 143, 7, 8, 0, 0, 143, 144,
		7, 10, 0, 0, 144, 14, 1, 0, 0, 0, 145, 146, 7, 0, 0, 0, 146, 147, 7, 1,
		0, 0, 147, 148, 7, 12, 0, 0, 148, 149, 7, 5, 0, 0, 149, 150, 7, 13, 0,
		0, 150, 16, 1, 0, 0, 0, 151, 152, 7, 5, 0, 0, 152, 153, 7, 0, 0, 0, 153,
		154, 7, 12, 0, 0, 154, 155, 7, 5, 0, 0, 155, 156, 7, 13, 0, 0, 156, 18,
		1, 0, 0, 0, 157, 158, 7, 0, 0, 0, 158, 159, 7, 1, 0, 0, 159, 160, 7, 8,
		0, 0, 160, 161, 7, 4, 0, 0, 161, 162, 7, 5, 0, 0, 162, 20, 1, 0, 0, 0,
		163, 164, 7, 5, 0, 0, 164, 165, 7, 0, 0, 0, 165, 166, 7, 8, 0, 0, 166,
		167, 7, 4, 0, 0, 167, 168, 7, 5, 0, 0, 168, 22, 1, 0, 0, 0, 169, 170, 7,
		0, 0, 0, 170, 171, 7, 1, 0, 0, 171, 172, 7, 6, 0, 0, 172, 173, 7, 3, 0,
		0, 173, 174, 7, 11, 0, 0, 174, 175, 7, 14, 0, 0, 175, 24, 1, 0, 0, 0, 176,
		177, 7, 0, 0, 0, 177, 178, 7, 1, 0, 0, 178, 179, 7, 2, 0, 0, 179, 180,
		7, 3, 0, 0, 180, 181, 7, 5, 0, 0, 181, 26, 1, 0, 0, 0, 182, 183, 7, 14,
		0, 0, 183, 184, 7, 15, 0, 0, 184, 185, 7, 14, 0, 0, 185, 186, 7, 16, 0,
		0, 186, 28, 1, 0, 0, 0, 187, 188, 7, 13, 0, 0, 188, 189, 7, 17, 0, 0, 189,
		190, 7, 8, 0, 0, 190, 191, 7, 4, 0, 0, 191, 192, 7, 14, 0, 0, 192, 30,
		1, 0, 0, 0, 193, 194, 7, 5, 0, 0, 194, 195, 7, 14, 0, 0, 195, 196, 7, 13,
		0, 0, 196, 32, 1, 0, 0, 0, 197, 198, 5, 45, 0, 0, 198, 199, 7, 13, 0, 0,
		199, 200, 7, 17, 0, 0, 200, 201, 7, 10, 0, 0, 201, 202, 7, 18, 0, 0, 202,
		34, 1, 0, 0, 0, 203, 204, 5, 45, 0, 0, 204, 205, 7, 6, 0, 0, 205, 206,
		7, 3, 0, 0, 206, 207, 7, 10, 0, 0, 207, 36, 1, 0, 0, 0, 208, 209, 5, 45,
		0, 0, 209, 210, 7, 4, 0, 0, 210, 211, 7, 3, 0, 0, 211, 212, 7, 19, 0, 0,
		212, 213, 7, 14, 0, 0, 213, 38, 1, 0, 0, 0, 214, 215, 5, 45, 0, 0, 215,
		216, 7, 8, 0, 0, 216, 217, 7, 9, 0, 0, 217, 218, 7, 3, 0, 0, 218, 219,
		7, 10, 0, 0, 219, 40, 1, 0, 0, 0, 220, 221, 5, 45, 0, 0, 221, 222, 7, 9,
		0, 0, 222, 223, 7, 17, 0, 0, 223, 224, 7, 0, 0, 0, 224, 225, 7, 14, 0,
		0, 225, 42, 1, 0, 0, 0, 226, 227, 5, 45, 0, 0, 227, 228, 7, 10, 0, 0, 228,
		229, 7, 20, 0, 0, 229, 230, 7, 13, 0, 0, 230, 231, 7, 14, 0, 0, 231, 44,
		1, 0, 0, 0, 232, 233, 5, 45, 0, 0, 233, 234, 7, 3, 0, 0, 234, 235, 7, 2,
		0, 0, 235, 46, 1, 0, 0, 0, 236, 237, 5, 45, 0, 0, 237, 238, 7, 8, 0, 0,
		238, 239, 7, 4, 0, 0, 239, 240, 7, 8, 0, 0, 240, 241, 7, 17, 0, 0, 241,
		242, 7, 5, 0, 0, 242, 243, 7, 3, 0, 0, 243, 244, 7, 7, 0, 0, 244, 48, 1,
		0, 0, 0, 245, 246, 5, 45, 0, 0, 246, 247, 7, 13, 0, 0, 247, 248, 7, 17,
		0, 0, 248, 249, 7, 4, 0, 0, 249, 250, 7, 4, 0, 0, 250, 251, 7, 21, 0, 0,
		251, 252, 7, 7, 0, 0, 252, 253, 7, 5, 0, 0, 253, 254, 7, 2, 0, 0, 254,
		50, 1, 0, 0, 0, 255, 256, 5, 45, 0, 0, 256, 257, 7, 13, 0, 0, 257, 258,
		7, 21, 0, 0, 258, 259, 7, 2, 0, 0, 259, 52, 1, 0, 0, 0, 260, 261, 5, 45,
		0, 0, 261, 262, 7, 16, 0, 0, 262, 263, 7, 7, 0, 0, 263, 264, 7, 9, 0, 0,
		264, 265, 7, 10, 0, 0, 265, 54, 1, 0, 0, 0, 266, 267, 5, 45, 0, 0, 267,
		268, 7, 12, 0, 0, 268, 269, 7, 5, 0, 0, 269, 270, 7, 13, 0, 0, 270, 56,
		1, 0, 0, 0, 271, 272, 5, 45, 0, 0, 272, 273, 7, 5, 0, 0, 273, 274, 7, 8,
		0, 0, 274, 275, 7, 10, 0, 0, 275, 276, 7, 17, 0, 0, 276, 58, 1, 0, 0, 0,
		277, 278, 5, 45, 0, 0, 278, 279, 7, 5, 0, 0, 279, 60, 1, 0, 0, 0, 280,
		281, 5, 45, 0, 0, 281, 282, 7, 13, 0, 0, 282, 62, 1, 0, 0, 0, 283, 284,
		7, 6, 0, 0, 284, 285, 7, 6, 0, 0, 285, 64, 1, 0, 0, 0, 286, 287, 7, 21,
		0, 0, 287, 288, 7, 6, 0, 0, 288, 66, 1, 0, 0, 0, 289, 290, 7, 22, 0, 0,
		290, 291, 7, 6, 0, 0, 291, 68, 1, 0, 0, 0, 292, 293, 7, 1, 0, 0, 293, 70,
		1, 0, 0, 0, 294, 295, 7, 0, 0, 0, 295, 72, 1, 0, 0, 0, 296, 297, 7, 22,
		0, 0, 297, 74, 1, 0, 0, 0, 298, 299, 7, 13, 0, 0, 299, 76, 1, 0, 0, 0,
		300, 301, 7, 14, 0, 0, 301, 78, 1, 0, 0, 0, 302, 303, 7, 11, 0, 0, 303,
		80, 1, 0, 0, 0, 304, 305, 7, 6, 0, 0, 305, 306, 7, 17, 0, 0, 306, 307,
		7, 4, 0, 0, 307, 308, 7, 10, 0, 0, 308, 82, 1, 0, 0, 0, 309, 310, 7, 6,
		0, 0, 310, 311, 7, 8, 0, 0, 311, 312, 7, 11, 0, 0, 312, 313, 7, 11, 0,
		0, 313, 84, 1, 0, 0, 0, 314, 318, 7, 23, 0, 0, 315, 317, 7, 24, 0, 0, 316,
		315, 1, 0, 0, 0, 317, 320, 1, 0, 0, 0, 318, 316, 1, 0, 0, 0, 318, 319,
		1, 0, 0, 0, 319, 321, 1, 0, 0, 0, 320, 318, 1, 0, 0, 0, 321, 322, 7, 23,
		0, 0, 322, 86, 1, 0, 0, 0, 323, 325, 7, 25, 0, 0, 324, 323, 1, 0, 0, 0,
		325, 326, 1, 0, 0, 0, 326, 324, 1, 0, 0, 0, 326, 327, 1, 0, 0, 0, 327,
		88, 1, 0, 0, 0, 328, 329, 7, 25, 0, 0, 329, 330, 7, 25, 0, 0, 330, 331,
		7, 25, 0, 0, 331, 332, 7, 26, 0, 0, 332, 90, 1, 0, 0, 0, 333, 335, 7, 27,
		0, 0, 334, 336, 7, 28, 0, 0, 335, 334, 1, 0, 0, 0, 336, 337, 1, 0, 0, 0,
		337, 335, 1, 0, 0, 0, 337, 338, 1, 0, 0, 0, 338, 340, 1, 0, 0, 0, 339,
		333, 1, 0, 0, 0, 340, 341, 1, 0, 0, 0, 341, 339, 1, 0, 0, 0, 341, 342,
		1, 0, 0, 0, 342, 92, 1, 0, 0, 0, 343, 345, 7, 29, 0, 0, 344, 343, 1, 0,
		0, 0, 345, 346, 1, 0, 0, 0, 346, 344, 1, 0, 0, 0, 346, 347, 1, 0, 0, 0,
		347, 94, 1, 0, 0, 0, 348, 349, 7, 30, 0, 0, 349, 96, 1, 0, 0, 0, 350, 354,
		7, 31, 0, 0, 351, 353, 7, 32, 0, 0, 352, 351, 1, 0, 0, 0, 353, 356, 1,
		0, 0, 0, 354, 352, 1, 0, 0, 0, 354, 355, 1, 0, 0, 0, 355, 358, 1, 0, 0,
		0, 356, 354, 1, 0, 0, 0, 357, 359, 7, 33, 0, 0, 358, 357, 1, 0, 0, 0, 358,
		359, 1, 0, 0, 0, 359, 360, 1, 0, 0, 0, 360, 361, 6, 48, 0, 0, 361, 98,
		1, 0, 0, 0, 362, 364, 7, 34, 0, 0, 363, 362, 1, 0, 0, 0, 364, 365, 1, 0,
		0, 0, 365, 363, 1, 0, 0, 0, 365, 366, 1, 0, 0, 0, 366, 367, 1, 0, 0, 0,
		367, 368, 6, 49, 0, 0, 368, 100, 1, 0, 0, 0, 9, 0, 318, 326, 337, 341,
		346, 354, 358, 365, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// CmdLexerInit initializes any static state used to implement CmdLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewCmdLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func CmdLexerInit() {
	staticData := &cmdlexerLexerStaticData
	staticData.once.Do(cmdlexerLexerInit)
}

// NewCmdLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewCmdLexer(input antlr.CharStream) *CmdLexer {
	CmdLexerInit()
	l := new(CmdLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &cmdlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Cmd.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// CmdLexer tokens.
const (
	CmdLexerTOK_MKDISK        = 1
	CmdLexerTOK_RMDISK        = 2
	CmdLexerTOK_FDISK         = 3
	CmdLexerTOK_MOUNT         = 4
	CmdLexerTOK_MKFS          = 5
	CmdLexerTOK_LOGIN         = 6
	CmdLexerTOK_LOGOUT        = 7
	CmdLexerTOK_MKGRP         = 8
	CmdLexerTOK_RMGRP         = 9
	CmdLexerTOK_MKUSR         = 10
	CmdLexerTOK_RMUSR         = 11
	CmdLexerTOK_MKFILE        = 12
	CmdLexerTOK_MKDIR         = 13
	CmdLexerTOK_EXEC          = 14
	CmdLexerTOK_PAUSE         = 15
	CmdLexerTOK_REP           = 16
	CmdLexerTOK_PATH          = 17
	CmdLexerTOK_FIT           = 18
	CmdLexerTOK_SIZE          = 19
	CmdLexerTOK_UNIT          = 20
	CmdLexerTOK_NAME          = 21
	CmdLexerTOK_TYPE          = 22
	CmdLexerTOK_ID            = 23
	CmdLexerTOK_USUARIO       = 24
	CmdLexerTOK_PASSWORD      = 25
	CmdLexerTOK_PWD           = 26
	CmdLexerTOK_CONT          = 27
	CmdLexerTOK_GRP           = 28
	CmdLexerTOK_RUTA          = 29
	CmdLexerTOK_R             = 30
	CmdLexerTOK_P             = 31
	CmdLexerTOK_FIRST         = 32
	CmdLexerTOK_WORST         = 33
	CmdLexerTOK_BEST          = 34
	CmdLexerTOK_KB            = 35
	CmdLexerTOK_MB            = 36
	CmdLexerTOK_BYTES         = 37
	CmdLexerTOK_PRIMARIA      = 38
	CmdLexerTOK_EXTENDIDA     = 39
	CmdLexerTOK_LOGICA        = 40
	CmdLexerTOK_FAST          = 41
	CmdLexerTOK_FULL          = 42
	CmdLexerTOK_CADENA        = 43
	CmdLexerTOK_NUMERO        = 44
	CmdLexerTOK_IDENTIFICADOR = 45
	CmdLexerTOK_CAMINO        = 46
	CmdLexerTOK_PALABRA       = 47
	CmdLexerTOK_IGUAL         = 48
	CmdLexerCOMENTARIOS       = 49
	CmdLexerWHITESPACE        = 50
)
